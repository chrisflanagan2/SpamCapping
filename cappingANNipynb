{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"cappingANNipynb","provenance":[],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"CShakovJ5EQY"},"source":["import pandas as pd\n","import numpy as np\n","import io"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":72},"id":"_1xfzjjozOQm","executionInfo":{"status":"ok","timestamp":1622145776720,"user_tz":240,"elapsed":318928,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"3f2de70b-044c-496a-a0cd-0d904d7a014d"},"source":["from google.colab import files\n","uploaded = files.upload()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-449885b9-1c81-427d-a1af-43d82001cbef\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-449885b9-1c81-427d-a1af-43d82001cbef\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving completeData.csv to completeData.csv\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VcDJHO7rEhF0"},"source":["df = pd.read_csv(io.BytesIO(uploaded['completeData.csv']))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cLFUd12KhP6z"},"source":["df = pd.read_csv('completeData.csv')\n","df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bUNu7UutGRWA","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1622145999001,"user_tz":240,"elapsed":224,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"9c42c433-a1c4-499f-83f5-4be80ded88c9"},"source":["data = pd.DataFrame(df,columns = ['subject','hamspam'])\n","data.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject</th>\n","      <th>hamspam</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Blow out Sale on printer ink. Save up to 85%</td>\n","      <td>Spam</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CONGRATS! You have Scored 85% Special Discount...</td>\n","      <td>Spam</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CONGRATS! You have Scored 85% Special Discount...</td>\n","      <td>Spam</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Printer ink sale up to 85% off plus free shipp...</td>\n","      <td>Spam</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Printer Ink- Save up to 85% off</td>\n","      <td>Spam</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                             subject hamspam\n","0       Blow out Sale on printer ink. Save up to 85%    Spam\n","1  CONGRATS! You have Scored 85% Special Discount...    Spam\n","2  CONGRATS! You have Scored 85% Special Discount...    Spam\n","3  Printer ink sale up to 85% off plus free shipp...    Spam\n","4                    Printer Ink- Save up to 85% off    Spam"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"SWXjMeH3oGJE","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1622146001158,"user_tz":240,"elapsed":223,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"f1188c93-c289-45d3-daef-6f53f62813e5"},"source":["from string import printable\n","st = set(printable)\n","data[\"hamspam\"]=data[\"hamspam\"].apply(lambda x: 1 if x.lower() == \"spam\" else 0)\n","data[\"subject\"] = data[\"subject\"].apply(lambda x: ''.join([\"\" if  i not in st else i for i in x]))\n","data.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject</th>\n","      <th>hamspam</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Blow out Sale on printer ink. Save up to 85%</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CONGRATS! You have Scored 85% Special Discount...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CONGRATS! You have Scored 85% Special Discount...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Printer ink sale up to 85% off plus free shipp...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Printer Ink- Save up to 85% off</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                             subject  hamspam\n","0       Blow out Sale on printer ink. Save up to 85%        1\n","1  CONGRATS! You have Scored 85% Special Discount...        1\n","2  CONGRATS! You have Scored 85% Special Discount...        1\n","3  Printer ink sale up to 85% off plus free shipp...        1\n","4                    Printer Ink- Save up to 85% off        1"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"UJ4_zPYoowG4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622146005284,"user_tz":240,"elapsed":1923,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"f9aaf633-57dd-486b-ad76-28275e4ce8d5"},"source":["import nltk\n","nltk.download(\"stopwords\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"2RqT9zX2zSWM"},"source":["Remove stopwords from the data"]},{"cell_type":"code","metadata":{"id":"WEu1YRfiod2h","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1622146009492,"user_tz":240,"elapsed":2517,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"b22029b4-d467-4953-bf66-b298218445b2"},"source":["import re\n","import string\n","from string import punctuation\n","from nltk.corpus import stopwords\n","def text_processing(message):\n","    Stopwords = stopwords.words('english')\n","    no_punctuation = [char for char in message if char not in string.punctuation]\n","    no_punctuation = ''.join(no_punctuation)  \n","    return ' '.join([word for word in no_punctuation.split() if word.lower() not in Stopwords])\n","data['subject'] = data['subject'].apply(text_processing)\n","data.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subject</th>\n","      <th>hamspam</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Blow Sale printer ink Save 85</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CONGRATS Scored 85 Special Discount Ink Toner</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CONGRATS Scored 85 Special Discount Ink Toner</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Printer ink sale 85 plus free shipping option</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Printer Ink Save 85</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                         subject  hamspam\n","0                  Blow Sale printer ink Save 85        1\n","1  CONGRATS Scored 85 Special Discount Ink Toner        1\n","2  CONGRATS Scored 85 Special Discount Ink Toner        1\n","3  Printer ink sale 85 plus free shipping option        1\n","4                            Printer Ink Save 85        1"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"FvMKVxrZpMIV"},"source":["from sklearn.model_selection import train_test_split\n","X=data['subject'].values\n","y=data['hamspam'].values\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7g-E9jnyzZn5"},"source":["Count Vectorize and TF-IDF transform"]},{"cell_type":"code","metadata":{"id":"xL1A9jU8pbeR"},"source":["from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","#Vectorization\n","vect = CountVectorizer()\n","X_train = vect.fit_transform(X_train)\n","X_test = vect.transform(X_test)\n","#Term Frequency, Inverse Document Frequency\n","from sklearn.feature_extraction.text import TfidfTransformer\n","tfidf = TfidfTransformer()\n","X_train = tfidf.fit_transform(X_train)\n","X_test = tfidf.transform(X_test)\n","X_train=X_train.toarray()\n","X_test=X_test.toarray()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1ulHango0rcE"},"source":["Fit model"]},{"cell_type":"code","metadata":{"id":"TCZt_47Iq5yj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622146037161,"user_tz":240,"elapsed":20262,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"b890fbb8-ebe0-4588-8f2b-638e8d90b2eb"},"source":["import tensorflow as tf\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Activation,Dropout\n","model = Sequential()\n","model.add(Dense(units=3,activation='relu'))\n","#model.add(Dense(units=32,activation='relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(units=2,activation='relu'))\n","#model.add(Dropout(0.2))\n","model.add(Dense(units=1))\n","\n","model.compile(loss='binary_crossentropy', optimizer='adam')\n","from tensorflow.keras.callbacks import EarlyStopping\n","early_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=10)\n","model.fit(x=X_train,y=y_train,epochs=40,validation_data=(X_test, y_test), verbose=1,callbacks=[early_stop])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/40\n","484/484 [==============================] - 3s 3ms/step - loss: 0.6038 - val_loss: 0.2633\n","Epoch 2/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.2152 - val_loss: 0.1558\n","Epoch 3/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.1394 - val_loss: 0.1534\n","Epoch 4/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.1024 - val_loss: 0.1595\n","Epoch 5/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0865 - val_loss: 0.1998\n","Epoch 6/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0808 - val_loss: 0.2399\n","Epoch 7/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0742 - val_loss: 0.2411\n","Epoch 8/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0674 - val_loss: 0.2599\n","Epoch 9/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0635 - val_loss: 0.2777\n","Epoch 10/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0607 - val_loss: 0.2878\n","Epoch 11/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0546 - val_loss: 0.3409\n","Epoch 12/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0515 - val_loss: 0.2970\n","Epoch 13/40\n","484/484 [==============================] - 1s 2ms/step - loss: 0.0767 - val_loss: 0.2856\n","Epoch 00013: early stopping\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f1bbac43e10>"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"92Q91BK-ylKW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621885477469,"user_tz":240,"elapsed":6,"user":{"displayName":"Sam Currier","photoUrl":"","userId":"09590661146602923125"}},"outputId":"7aff995b-56d7-4296-d696-0fa34e77076c"},"source":["print(len(X_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3873\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kQ086NZlrfch","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622146040665,"user_tz":240,"elapsed":1138,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"b8465367-1566-45f9-c814-4ea1c61d026a"},"source":["predictions = model.predict_classes(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,predictions))\n","print(classification_report(y_test,predictions))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:455: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"},{"output_type":"stream","text":["[[2292  119]\n"," [  63 1399]]\n","              precision    recall  f1-score   support\n","\n","           0       0.97      0.95      0.96      2411\n","           1       0.92      0.96      0.94      1462\n","\n","    accuracy                           0.95      3873\n","   macro avg       0.95      0.95      0.95      3873\n","weighted avg       0.95      0.95      0.95      3873\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kC3fNbteqj39","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622146044303,"user_tz":240,"elapsed":267,"user":{"displayName":"Chris Flanagan","photoUrl":"","userId":"09064471218342942058"}},"outputId":"ca2da8f0-f96e-4d1f-a7ee-bc87c2631fd3"},"source":["print(classification_report(y_test,predictions))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.97      0.95      0.96      2411\n","           1       0.92      0.96      0.94      1462\n","\n","    accuracy                           0.95      3873\n","   macro avg       0.95      0.95      0.95      3873\n","weighted avg       0.95      0.95      0.95      3873\n","\n"],"name":"stdout"}]}]}